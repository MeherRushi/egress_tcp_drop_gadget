name: rand_pkt_drop
description: Drop egress/ingress TCP/UDP packets based on destination address, port
  pair
homepageURL: https://inspektor-gadget.io/
documentationURL: https://www.inspektor-gadget.io/docs/latest/gadgets/rand_pkt_drop
sourceURL: https://github.com/inspektor-gadget/inspektor-gadget/tree/main/gadgets/rand_pkt_drop
datasources:
  events_map:
    annotations:
      events_map.collect: "true"
    fields: {}
  events_map_iter:
    fields:
      comm:
        annotations:
          description: Process name
          template: comm
      drop_cnt:
        annotations:
          description: The number of packets dropped per destination address, port
            pair
      dst:
        annotations:
          description: Destination endpoint
          template: l4endpoint
      egress:
        annotations:
          description: A boolean parameter to indicate whether the program is attached
            at the egress hookpoint or not
      filter_ipv4:
        annotations:
          description: The dst ipv4 address and port pair to filter packets
          template: l4endpoint
      gid:
        annotations:
          columns.hidden: "true"
          description: Group ID
          template: uid
      ingress:
        annotations:
          description: A boolean parameter to indicate whether the program is attached
            at the ingress hookpoint or not
      mntns_id:
        annotations:
          description: Mount namespace inode id
          template: ns
      netns_id:
        annotations:
          description: Network namespace inode id
          template: ns
      pcomm:
        annotations:
          columns.hidden: "true"
          template: pcomm
      pid:
        annotations:
          description: Process ID
          template: pid
      ppid:
        annotations:
          columns.hidden: "true"
          description: Parent process ID
          template: pid
      src:
        annotations:
          description: Source endpoint
          template: l4endpoint
      tid:
        annotations:
          columns.hidden: "true"
          description: Thread ID
          template: pid
      timestamp_raw:
        annotations:
          columns.hidden: "true"
          description: Timestamp at which the event was generated
          template: timestamp
      uid:
        annotations:
          columns.hidden: "true"
          description: User ID
          template: uid
params:
  ebpf:
    a:
      key: a
      defaultValue: "0"
      description: The first 8 bits of the filter IPv4 address in Integer Format (Eg:-
        127)
    b:
      key: b
      defaultValue: "0"
      description: The second 8 bits of the filter IPv4 address in Integer Format
        (Eg:- 0)
    c:
      key: c
      defaultValue: "0"
      description: The third 8 bits of the filter IPv4 address in Integer Format (Eg:-
        0)
    d:
      key: d
      defaultValue: "0"
      description: The last 8 bits of the filter IPv4 address in Integer Format (Eg:-
        1)
    egress:
      key: egress
      defaultValue: "true"
      description: This is a boolean parameter to indicate whether the program is
        to be attached at the egress hookpoint or not
    filter_tcp:
      key: filter_tcp
      defaultValue: "true"
      description: This is a boolean parameter to decide whether TCP packets should
        be filtered or not
    filter_udp:
      key: filter_udp
      defaultValue: "true"
      description: This is a boolean parameter to decide whether UDP packets should
        be filtered or not
    ingress:
      key: ingress
      defaultValue: "false"
      description: This is a boolean parameter to indicate whether the program is
        to be attached at the ingress hookpoint or not
    loss_percentage:
      key: loss_percentage
      defaultValue: "100"
      description: This is the percentage of packets to be dropped (Eg:- 100)
    port:
      key: port
      defaultValue: "0"
      description: port number (Eg:- 443)
